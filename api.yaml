---
swagger: "2.0"
info:
  version: "1.0"
  title: "LatteArt Repository"
basePath: "/api/v1"
paths:
  /test-results:
    get:
      summary: Get test result identifiers.
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: Test result ID.
                name:
                  type: string
                  description: Test result name.
    post:
      summary: Create an empty test result.
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            properties:
              initialUrl:
                type: string
                description: Initial test target URL.
              name:
                type: string
                description: Test result name.
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: string
                description: Test result ID.
              name:
                type: string
                description: Test result name.
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"

  /test-results/{testResultId}:
    get:
      summary: Get a test result.
      parameters:
        - name: testResultId
          in: "path"
          description: Test result ID.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TestResult"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"
    patch:
      summary: Update a test result.
      parameters:
        - name: testResultId
          in: "path"
          description: Test result ID.
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Test result name.
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TestResult"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"

  /test-results/{testResultId}/test-steps:
    post:
      summary: Add a test step.
      parameters:
        - name: "testResultId"
          in: "path"
          description: Test result ID.
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/TestStepSource"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              operation:
                $ref: "#/definitions/Operation"
              coverageSource:
                $ref: "#/definitions/CoverageSource"
              inputElementInfo:
                $ref: "#/definitions/InputElementInfo"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"

  /test-results/{testResultId}/test-steps/{sequence}:
    get:
      summary: Get a test step.
      parameters:
        - name: "testResultId"
          in: "path"
          description: Test result ID.
          required: true
          type: string
        - name: "sequence"
          in: "path"
          description: Sequence number of the test step.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TestStepWithSequence"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"
    patch:
      summary: Update links to notes in a test step.
      parameters:
        - name: "testResultId"
          in: "path"
          description: Test result ID.
          required: true
          type: string
        - name: "sequence"
          in: "path"
          description: Sequence number of the test step.
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/NotesLink"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TestStep"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"
  /test-results/{testResultId}/test-steps/{sequence}/compressed-image:
    post:
      summary: Compress screenshot.
      parameters:
        - name: "testResultId"
          in: "path"
          description: Test result ID.
          required: true
          type: string
        - name: "sequence"
          in: "path"
          description: Sequence number of the test step.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              imageFileUrl:
                type: string
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"
  /test-results/{testResultId}/notes:
    post:
      summary: Add a note.
      parameters:
        - name: "testResultId"
          in: "path"
          description: Test result ID.
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/NoteSourceWithImageData"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Note"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"

  /test-results/{testResultId}/notes/{noteId}:
    get:
      summary: Get a note.
      parameters:
        - name: "testResultId"
          in: "path"
          description: Test result ID.
          required: true
          type: string
        - name: noteId
          in: path
          description: Note ID.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Note"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"
    put:
      summary: Update a note.
      parameters:
        - name: "testResultId"
          in: "path"
          description: Test result ID.
          required: true
          type: string
        - name: noteId
          in: path
          description: Note ID.
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/NoteSource"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Note"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"
    delete:
      summary: Delete a note.
      parameters:
        - name: "testResultId"
          in: "path"
          description: Test result ID.
          required: true
          type: string
        - name: noteId
          in: path
          description: Note ID.
          required: true
          type: string
      responses:
        204:
          description: OK
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"
  /test-results/{testResultId}/notes/{noteId}/compressed-image:
    post:
      summary: Compress screenshot.
      parameters:
        - name: "testResultId"
          in: "path"
          description: Test result ID.
          required: true
          type: string
        - name: noteId
          in: path
          description: Note ID.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              imageFileUrl:
                type: string
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"
  /test-results/{testResultId}/test-scripts:
    get:
      summary: Get test script urls of a test result.
      parameters:
        - name: "testResultId"
          in: "path"
          description: Test result ID.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
              description: Test script url.
    post:
      summary: Save test scripts of a test result.
      parameters:
        - name: "testResultId"
          in: "path"
          description: Test result ID.
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/TestScript"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              url:
                type: string
                description: URL of the test scripts.
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"

  /projects/{projectId}/test-scripts:
    get:
      summary: Get test script urls of a project.
      parameters:
        - name: "projectId"
          in: "path"
          description: Project ID.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
              description: Test script url.
    post:
      summary: Save test scripts of a project.
      parameters:
        - name: "projectId"
          in: "path"
          description: Project ID.
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/TestScript"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              url:
                type: string
                description: URL of the test scripts.
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"

  /projects/{projectId}/snapshots:
    get:
      summary: Get snapshot urls.
      parameters:
        - name: "projectId"
          in: "path"
          description: Project ID.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: string
              description: Snapshot url.
    post:
      summary: Take a snapshot of a project.
      parameters:
        - name: "projectId"
          in: "path"
          description: Project ID.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              url:
                type: string
                description: URL of the snapshot.
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"

  /projects:
    get:
      summary: Get project identifiers.
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  description: Project ID.
                name:
                  type: string
                  description: Project name.
    post:
      summary: Create an empty project.
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Project name.
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Project"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"

  /projects/{projectId}:
    get:
      summary: Get a project.
      parameters:
        - name: "projectId"
          in: "path"
          description: Project ID.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              testMatrices:
                type: array
                items:
                  $ref: "#/definitions/TestMatrix"
              stories:
                type: array
                items:
                  $ref: "#/definitions/Story"
              progressDatas:
                type: array
                items:
                  $ref: "#/definitions/ProgressData"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"
    put:
      summary: Update a project.
      parameters:
        - name: "projectId"
          in: "path"
          description: Project ID.
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            properties:
              testMatrices:
                type: array
                items:
                  $ref: "#/definitions/TestMatrix"
              stories:
                type: array
                items:
                  $ref: "#/definitions/StorySource"
              progressDatas:
                type: array
                items:
                  $ref: "#/definitions/ProgressData"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              testMatrices:
                type: array
                items:
                  $ref: "#/definitions/TestMatrix"
              stories:
                type: array
                items:
                  $ref: "#/definitions/Story"
              progressDatas:
                type: array
                items:
                  $ref: "#/definitions/ProgressData"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"
  /projects/{projectId}/sessions/{sessionId}:
    patch:
      summary: Update a session.
      parameters:
        - name: projectId
          in: path
          description: Project ID.
          required: true
          type: string
        - name: sessionId
          in: path
          description: Session ID.
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/SessionSource"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SessionSource"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"

  /projects/{projectId}/configs:
    get:
      summary: Get config.
      parameters:
        - name: projectId
          in: path
          description: Project ID.
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Config"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"
    put:
      summary: Update config.
      parameters:
        - name: projectId
          in: path
          description: Project ID.
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Config"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Config"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ServerError"

definitions:
  ServerError:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            target:
              type: string
  TestResult:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      startTimeStamp:
        type: integer
      endTimeStamp:
        type: integer
      initialUrl:
        type: string
      testSteps:
        type: array
        items:
          $ref: "#/definitions/TestStep"
      coverageSources:
        type: array
        items:
          $ref: "#/definitions/CoverageSource"
      inputElementInfos:
        type: array
        items:
          $ref: "#/definitions/InputElementInfo"
  TestStepSource:
    type: object
    properties:
      input:
        type: string
      type:
        type: string
      elementInfo:
        $ref: "#/definitions/ElementInfo"
      pageSource:
        type: string
      title:
        type: string
      url:
        type: string
      imageData:
        type: string
        format: byte
      windowHandle:
        type: string
      timestamp:
        type: string
  NotesLink:
    type: object
    properties:
      intention:
        type: string
      bugs:
        type: array
        items:
          type: string
      notices:
        type: array
        items:
          type: string
  NoteSource:
    type: object
    properties:
      value:
        type: string
      details:
        type: string
  NoteSourceWithImageData:
    type: object
    properties:
      type:
        type: string
        enum:
          - "intention"
          - "bug"
          - "notice"
      value:
        type: string
      details:
        type: string
      imageData:
        type: string
        format: byte
  TestStepWithSequence:
    type: object
    properties:
      sequence:
        type: number
      operation:
        $ref: "#/definitions/Operation"
      intention:
        type: string
      bugs:
        type: array
        items:
          type: string
      notices:
        type: array
        items:
          type: string
  TestStep:
    type: object
    properties:
      operation:
        $ref: "#/definitions/Operation"
      intention:
        $ref: "#/definitions/Note"
      bugs:
        type: array
        items:
          $ref: "#/definitions/Note"
      notices:
        type: array
        items:
          $ref: "#/definitions/Note"
  Operation:
    type: object
    properties:
      sequence:
        type: number
      input:
        type: string
      type:
        type: string
      elementInfo:
        $ref: "#/definitions/ElementInfo"
      title:
        type: string
      url:
        type: string
      imageFileUrl:
        type: string
      timestamp:
        type: string
      windowHandle:
        type: string
      inputElementInfo:
        type: array
        items:
          $ref: "#/definitions/ElementInfo"
      pageSource:
        type: string
  Note:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
        enum:
          - intention
          - bug
          - notice
      value:
        type: string
      details:
        type: string
      imageFileUrl:
        type: string
      tags:
        type: array
        items:
          type: string
  CoverageSource:
    type: object
    properties:
      title:
        type: string
      url:
        type: string
      screenElements:
        type: array
        items:
          $ref: "#/definitions/ElementInfo"
  InputElementInfo:
    type: object
    properties:
      title:
        type: string
      url:
        type: string
      inputElements:
        type: array
        items:
          $ref: "#/definitions/ElementInfo"
  Sequences:
    type: object
    properties:
      group:
        type: integer
      viewPoint:
        type: integer
      testMatrix:
        type: integer
      testTarget:
        type: integer
      session:
        type: object
        properties:
          +sessionId:
            type: integer
  ProjectSource:
    type: object
    properties:
      testMatrices:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            groups:
              type: array
              items:
                $ref: "#/definitions/Group"
      stories:
        type: array
        items:
          $ref: "#/definitions/Story"
      progressDatas:
        type: array
        items:
          $ref: "#/definitions/ProgressData"
  Project:
    type: object
    properties:
      testMatrices:
        type: array
        items:
          $ref: "#/definitions/TestMatrix"
      sequences:
        $ref: "#/definitions/Sequences"
  TestMatrix:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      groups:
        type: array
        items:
          $ref: "#/definitions/Group"
      stories:
        type: array
        items:
          $ref: "#/definitions/ViewPoint"
  Group:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      testTargets:
        type: array
        items:
          $ref: "#/definitions/TestTarget"
  TestTarget:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      plans:
        type: array
        items:
          $ref: "#/definitions/Plan"
  Plan:
    type: object
    properties:
      storyId:
        type: string
      value:
        type: integer
  ViewPoint:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  ElementInfo:
    type: object
    properties:
      tagname:
        type: string
      text:
        type: string
      xpath:
        type: string
      value:
        type: string
      checked:
        type: boolean
      attributes:
        type: object
        properties:
          anyAttribute:
            type: string
  Config:
    type: object
    properties:
      config:
        type: object
        properties:
          screenDefinition:
            type: object
            properties:
              screenDefType:
                type: string
              isRegex:
                type: boolean
              screenDefList:
                type: array
                items:
                  type: object
                  properties:
                    alias:
                      type: string
                    definition:
                      type: string
          exclusionElements:
            type: object
            properties:
              tags:
                type: array
                items:
                  type: string
      captureSettings:
        type: object
        properties:
          ignoreTags:
            type: array
            items:
              type: string
  TestScript:
    type: object
    properties:
      pageObjects:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            script:
              type: string
      testData:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            testData:
              type: string
      testSuite:
        type: object
        properties:
          name:
            type: string
          spec:
            type: string
  Issue:
    type: object
    properties:
      details:
        type: string
      source:
        type: object
        properties:
          index:
            type: integer
          sequence:
            type: integer
          type:
            type: string
            enum:
              - bug
              - notice
      status:
        type: string
        enum:
          - reported
          - unreported
      ticketId:
        type: string
      type:
        type: string
        enum:
          - bug
          - notice
      value:
        type: string
  TestResultFile:
    type: object
    properties:
      name:
        type: string
      id:
        type: string
  AttachedFile:
    type: object
    properties:
      name:
        type: string
      imageUrl:
        type: string
  AttachedFileSource:
    type: object
    properties:
      name:
        type: string
      imageData:
        type: string
  SessionSource:
    type: object
    properties:
      attachedFiles:
        type: array
        items:
          $ref: "#/definitions/AttachedFileSource"
      doneDate:
        type: string
      isDone:
        type: boolean
      issues:
        type: array
        items:
          $ref: "#/definitions/Issue"
      memo:
        type: string
      name:
        type: string
      testItem:
        type: string
      testResultFiles:
        type: array
        items:
          $ref: "#/definitions/TestResultFile"
      testerName:
        type: string
      testingTime:
        type: integer
  Session:
    type: object
    properties:
      attachedFiles:
        type: array
        items:
          $ref: "#/definitions/AttachedFile"
      doneDate:
        type: string
      isDone:
        type: boolean
      issues:
        type: array
        items:
          $ref: "#/definitions/Issue"
      memo:
        type: string
      name:
        type: string
      testItem:
        type: string
      testResultFiles:
        type: array
        items:
          $ref: "#/definitions/TestResultFile"
      testerName:
        type: string
      testingTime:
        type: integer
  StorySource:
    type: object
    properties:
      id:
        type: string
      status:
        type: "string"
        enum:
          - out-of-scope
          - ok
          - ng
          - ongoing
          - pending
      sessions:
        type: array
        items:
          $ref: "#/definitions/SessionSource"
  Story:
    type: object
    properties:
      id:
        type: string
      status:
        type: "string"
        enum:
          - out-of-scope
          - ok
          - ng
          - ongoing
          - pending
      sessions:
        type: array
        items:
          $ref: "#/definitions/Session"
  ProgressData:
    type: object
    properties:
      testMatrixId:
        type: string
      testMatrixProgressDatas:
        type: array
        items:
          type: object
          properties:
            date:
              type: string
            groups:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  testTargets:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        progress:
                          type: object
                          properties:
                            completedNumber:
                              type: integer
                            incompletedNumber:
                              type: integer
                            planNumber:
                              type: integer

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
